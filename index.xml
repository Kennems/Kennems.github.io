<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Guan</title>
    <link>https://showguan.github.io/</link>
    <description>Recent content on Guan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 06 Apr 2024 17:47:22 +0800</lastBuildDate>
    <atom:link href="https://showguan.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My First Post</title>
      <link>https://showguan.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 06 Apr 2024 17:47:22 +0800</pubDate>
      <guid>https://showguan.github.io/posts/my-first-post/</guid>
      <description>hugo new content posts/my-first-post.md</description>
    </item>
    <item>
      <title></title>
      <link>https://showguan.github.io/posts/acwing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://showguan.github.io/posts/acwing/</guid>
      <description>acwing算法学习 [TOC]
第一章 课上：学思想
课下：背代码
题目，一道题写好几遍
理解没有任何意义，体力活+脑力活
记忆力 毅力/自制力
沉下心背东西
快速排序算法模板 —— 模板题 AcWing 785. 快速排序 分治
1、确定分界点，l、r、（l+r)/2 随机
2、调整区间，分为两边，左边小于等于x,右边大于等于x
3、递归处理左右两段
void quick_sort(int q[], int l, int r) { if (l &amp;gt;= r) return; int i = l - 1, j = r + 1, x = q[l + r &amp;gt;&amp;gt; 1]; while (i &amp;lt; j) { do i ++ ; while (q[i] &amp;lt; x); do j -- ; while (q[j] &amp;gt; x); if (i &amp;lt; j) swap(q[i], q[j]); } quick_sort(q, l, j), quick_sort(q, j + 1, r); } -std=c++11 归并排序算法模板 —— 模板题 AcWing 787.</description>
    </item>
    <item>
      <title></title>
      <link>https://showguan.github.io/posts/%E5%90%8E%E7%AB%AF%E5%85%AB%E8%82%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://showguan.github.io/posts/%E5%90%8E%E7%AB%AF%E5%85%AB%E8%82%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>title = &amp;lsquo;后端八股学习笔记&amp;rsquo; date = 2024-04-06T17:47:22+08:00 draft = false
+++
后端八股学习笔记 想要生活能进步，就不能走退步路。
计算机网络 网络是把主机连接起来，而互联网(Internet)是把多种不同的网络连接起来，因此互联网是网络的网络，而互联网(Internet)是全球范围的互联网。ISP 互联网服务提供商ISP可以从互联网管理机构获得许多IP地址，同时拥有通信线路以及路由器等联网设备，个人或机构向ISP缴纳一定的费用就可以接入互联网。
目前的互联网是一种多层次ISP结构，ISP根据覆盖面积的大小分为第一层ISP，区域ISP和接入ISP。**互联网交换点IXP（Internet Exchange Point)**允许两个ISP直接相连而不用经过第三个ISP。
主机之间的通信方式 客户-服务器（C/S）：客户是服务的请求方，服务器是服务的提供方。
对等（P2P）：不区分客户和服务器
电路交换与分组交换 1.电路交换 电路交换用于电话通信系统，两个用户要通信之前需要建立一条专用的物理链路，并且在整个通信过程中始终占用该链路。由于通信的过程中不可能一直在使用传输线路，因此电路交换对线路的利用率很低，往往不到10%。
2.分组交换 每个分组都有首部和尾部，包含了源地址和目的地址等控制信息，在同一个传输线路上同时传输多个分组互相不影响，因此在同一条传输线路上允许同时传输多个分组，也就是说分组交换不需要占用传输线路。
在同一个邮局通信系统中，邮局收到一份邮件之后，先存储下来，然后把相同目的地的邮件一起转发到下一个目的地，这个过程就是存储转发的过程，分组交换也使用了存储转发过程。
时延 总时延 = 排队时延 + 处理时延 + 传输时延 + 传播时延
1.排队时延 分组在路由器的输入队列和输出队列中排队等待的时间，取决于网络当前的通信量。
2.处理时延 主机或路由器收到分组时进行处理所需要的时间，例如分析首部、从分组中提取数据、进行差错检验或查找适当的路由等。
3.传输时延 主机或路由器传输数据帧所需要的时间。 $$ delay = \frac{l(bit)}{v(bit/s)} $$ $l$:数据帧的长度, $v$:传输速率
4.传播时延 电磁波在信道中传播所需要花费的时间，电磁波传播的速度接近光速。 $$ delay = \frac{l(m)}{v(m/s)} $$ $l$:表示信道长度， $v$:表示电磁波在信道上的传播速度
计算机网络体系结构 1.五层协议 应用层：为特定应用程序提供数据传输服务，例如HTTP，DNS等协议。数据单位为报文。
传输层：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议UDP，提供无连接的、尽最大努力的数据传输服务，数据单位为用户数据报。TCP主要提供完整性服务，UDP主要提供及时性服务。
网络层：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。
数据链路层：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。
物理层：考虑的是怎样在传输媒体上传输比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。
2.OSI (Open Systems Interconnection，开放式系统互联)</description>
    </item>
    <item>
      <title></title>
      <link>https://showguan.github.io/posts/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://showguan.github.io/posts/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%AC%94%E8%AE%B0/</guid>
      <description>蓝桥杯笔记 以后做事：切记切记切记，不要一直做新题，及时复习是最重要的。
一定一定拿一个国奖，6~7月准备两个项目，八月开始投简历。
真题一定要全部过一遍
一、基础复习阶段 3.4~3.10
二、刷题 3.10~3.20
三、刷真题，搞懂每一道真题 3.20~4.10
程序易错点 ：
变量未声明 i,j,k变量写错了 11+12+16+15+12+12 = 78
七夕祭 $$ p[i] : i给i+1 \enspace p[i]个糖果 \ 则 ans = \sum_{i=1}^n|p[i]| \ p[1]=a[1]-avg \ 递推 \enspace p[2]=p[1]+a[2]-avg \ p[3]=p[2]+a[3]-avg = p[1]+a[2]-avg+a[3]-avg \ p[4]=p[3]+a[4]-avg = p[2]+p[3]-avg+a[4]-avg = p[1]+a[2]-avg+a[3]-avg+a[4]-avg \ =\sum_{i=2}^4{(a[i]-avg)} - p[1] \ ans = $$
from collections import defaultdict r = defaultdict(int) c = defaultdict(int) s = defaultdict(int) def get_ans(a, n): ans = 0 avg = sum(a.</description>
    </item>
  </channel>
</rss>
